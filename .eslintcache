[{"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js":"1","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js":"2","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js":"3","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js":"4","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js":"5","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js":"6","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js":"7","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\endpoint.js":"8","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js":"9","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Manga.js":"10","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js":"11","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":1046,"mtime":1612782329570,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":6492,"mtime":1612541345699,"results":"17","hashOfConfig":"14"},{"size":2840,"mtime":1612405454248,"results":"18","hashOfConfig":"14"},{"size":7850,"mtime":1612780167196,"results":"19","hashOfConfig":"14"},{"size":7375,"mtime":1612767410027,"results":"20","hashOfConfig":"14"},{"size":754,"mtime":1612782293808,"results":"21","hashOfConfig":"14"},{"size":6386,"mtime":1612533782471,"results":"22","hashOfConfig":"14"},{"size":3422,"mtime":1612764944490,"results":"23","hashOfConfig":"14"},{"size":5034,"mtime":1612781260143,"results":"24","hashOfConfig":"14"},{"size":6710,"mtime":1612781282374,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tfuhah",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js",[],["57","58"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js",["59","60"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  MenuItem,\r\n  Menu\r\n } from \"@material-ui/core\";\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst cookies = new Cookies()\r\n\r\nexport default function PrimarySearchAppBar() {\r\n\r\n  const trigger = useScrollTrigger();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [isLoggedIn, setisLoggedIn] = useState(false)\r\n  \r\n\r\n  function tokenCheck(){\r\n\r\n    let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n    // console.log(cookies.get(\"Mangamee_Login_Token\"))\r\n\r\n    if(userToken != undefined){\r\n\r\n      setisLoggedIn(true)\r\n\r\n    }else{\r\n\r\n      setisLoggedIn(false)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function deleteToken(){\r\n\r\n    cookies.remove(\"Mangamee_Login_Token\" ,{ path: '/' })\r\n    cookies.remove(\"Mangamee_Temp_History\" ,{ path: '/' })\r\n    cookies.remove(\"Mangamee_Temp_Name\" ,{ path: '/' })\r\n    window.location.href='/'\r\n\r\n  }\r\n\r\n\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n\r\n  const renderMenuLogin = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n\r\n\r\n      {isLoggedIn && (\r\n\r\n          <MenuItem onClick={deleteToken}>\r\n          logout \r\n          </MenuItem>\r\n      )}\r\n\r\n      {!isLoggedIn && (\r\n\r\n          <MenuItem onClick={() => { window.location.href='/auth/signin'}}>\r\n          login  \r\n          </MenuItem>\r\n      )}\r\n\r\n    \r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n        <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <HomeIcon />\r\n        </IconButton>\r\n        <p>Home</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/browse'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <MenuBookIcon />\r\n        </IconButton>\r\n        <p>Browse Manga</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/search'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <SearchIcon />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    tokenCheck();\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar style={{ background: '#2E3B55' }}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Mangamee\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton color=\"inherit\">\r\n                <HomeIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/'\r\n\t\t\t\t\t\t      }}/>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                <MenuBookIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/browse'\r\n\t\t\t\t\t\t      }}/>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                <SearchIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/search'\r\n\t\t\t\t\t\t          }}/>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </Slide>\r\n      {renderMobileMenu}\r\n      {renderMenuLogin}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js",["61"],"import React, { useEffect, useState} from 'react'\r\nimport { apiBrowse } from \"../endpoint\";\r\nimport axios from 'axios'\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\n\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    CircularProgress\r\n\r\n } from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    mobileText:{\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: 12\r\n    }\r\n    }\r\n    }))\r\n\r\nexport default function Browse() {\r\n\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n\r\n        let mounted = true;\r\n        // axios.get(apiBrowse)\r\n\r\n        // .then(res =>{\r\n        //     if(mounted){\r\n        //         // console.log(res.data)\r\n        //         setList(res.data)\r\n        //         setLoading(false)\r\n        //     }\r\n        // })\r\n\r\n        async function fetchData(){\r\n            const browseData = await axios.get(apiBrowse);\r\n            if(mounted){\r\n                console.log(browseData.data)\r\n                setList(browseData.data)\r\n            }\r\n        }\r\n\r\n        fetchData()\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Container>\r\n            <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                {loading && (\r\n                    <CircularProgress color=\"secondary\"/>\r\n                )}\r\n            </Grid>\r\n            <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 70 }}>\r\n            {list.map(item =>{\r\n            \r\n                return(\r\n                <Grid item lg={2} xs={4}>\r\n                <Card className={classes.root} style={{ height: '100%' }}>\r\n                    <CardActionArea>\r\n                    <Link underline='none' component={RouterLink} to={`/EN/${item.link}`}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\" \"\r\n                        height=\"180\"\r\n                        src={item.thumbnail_image}\r\n                        title=\"manga title\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                            {item.name}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    </Link>\r\n                    </CardActionArea>\r\n                </Card>\r\n                </Grid>\r\n            )})}\r\n            </Grid>\r\n            </Container>\r\n        </div>  \r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js",["62","63","64","65"],"import React, { useState } from 'react'\r\nimport { apiSearch } from \"../endpoint\";\r\nimport axios from 'axios';\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    TextField,\r\n    CircularProgress,\r\n    CssBaseline,\r\n    Paper,\r\n    Box\r\n\r\n } from '@material-ui/core'\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    buttonColor: {\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: \"red\"\r\n        }\r\n      }\r\n  }));\r\n  \r\nexport default function Search() {\r\n\r\n    const classes = useStyles();\r\n    const [searchResult, setSearchResult] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [notFound, setnotFound] = useState(false)\r\n    const [langOption, setLangOption] = useState('EN');\r\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    function fetchData(title, langOption) {\r\n        \r\n        axios.get(apiSearch, {\r\n            params:{\r\n\r\n                lang:langOption,\r\n                manga_title:title\r\n            }\r\n        })\r\n        .then((res) =>{\r\n            console.log(res.data.length);\r\n            if(res.data.length !== 0){\r\n                setSearchResult(res.data);\r\n                setLoading(false)\r\n            }else{\r\n                setnotFound(true)\r\n                setLoading(false)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleLangSelect = (event, newLang) => {\r\n        setLangOption(newLang);\r\n    };\r\n\r\n    const onSubmitLogin = data => {\r\n\r\n        console.log(data)\r\n        console.log(langOption)\r\n        setLoading(true)\r\n        setnotFound(false)\r\n        fetchData(data.title_manga, langOption);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop : 120 }}>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmitLogin)}>\r\n                    <Controller\r\n                        name='title_manga'\r\n                        as={\r\n\r\n                            <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title_manga\"\r\n                            label=\"Manga Title\"\r\n                            name=\"title_manga\"\r\n                            autoFocus      \r\n                        />\r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n\r\n                    />\r\n\r\n                <ToggleButtonGroup\r\n                        value={langOption}\r\n                        exclusive\r\n                        onChange={handleLangSelect}\r\n                        aria-label=\"lang selected\"\r\n                    >\r\n                    <ToggleButton value=\"EN\" aria-label=\"left aligned\" className={classes.buttonColor}>\r\n                        ENG\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"ID\" aria-label=\"centered\" className={classes.buttonColor}>\r\n                        IND\r\n                    </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n\r\n                </form>\r\n                </div>\r\n                </Container>\r\n\r\n            \r\n                {loading && (\r\n\r\n                    <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    </Grid>\r\n\r\n                )}\r\n\r\n                {!loading && (\r\n\r\n                    <div>\r\n                    {!notFound &&(\r\n\r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                        {searchResult.map(item =>{\r\n                            return(\r\n                            \r\n                            <Grid item lg={2} xs={4}>\r\n                                    <Card className={classes.root} style={{ height: '100%' }}>\r\n                                        <div onClick={() => {\r\n                                        \r\n                                            let MangeName = item.name\r\n                                            let date = new Date(2030, 12)\r\n                                            cookies.set(\"Mangamee_Temp_Name\", MangeName, { path: \"/\", expires: date })\r\n                                    \r\n                                        }}>\r\n                                        <CardActionArea>\r\n                                        <Link underline='none' component={RouterLink} to={`/${langOption}/${item.link}`}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\" \"\r\n                                            height=\"180\"\r\n                                            src={item.thumbnail_image}\r\n                                            title=\"manga title\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" className={classes.mobileText}>\r\n                                                {item.name}\r\n                                            </Typography>\r\n                                            <br/>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                                {item.latest_chapter} chapter - {item.status}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </Link>\r\n                                        </CardActionArea>\r\n                                        </div>\r\n                                    </Card>\r\n                            </Grid> \r\n                        )})}\r\n                        </Grid>\r\n                    )}\r\n                    \r\n                    {notFound &&(\r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                            Not Found\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                    )}\r\n                    </div>\r\n                )}\r\n            </MuiThemeProvider>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js",["66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { apiUpdateHistory, apiGetHistory, apiDeleteHistory } from \"../endpoint\";\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    Button,\r\n    Paper,\r\n    Box\r\n\r\n } from '@material-ui/core'\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport {MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(6),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    }\r\n  }));\r\n\r\nexport default function Home() {\r\n\r\n    const [userHistory, setUserHistory] = useState([])\r\n    const [isLogin, setisLogin] = useState(false)\r\n    const classes = useStyles();\r\n\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        tokenCheck();\r\n\r\n    }, [])\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    function DeleteDbUser() {\r\n        \r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiDeleteHistory,{\r\n\r\n            token   : token,\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    function tokenCheck(){\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        // console.log(cookies.get(\"Mangamee_Login_Token\"))\r\n        console.log(userToken)\r\n    \r\n        if(userToken != undefined){\r\n    \r\n            fetchHistory(userToken);\r\n            setisLogin(true)\r\n    \r\n        }\r\n    \r\n      }\r\n\r\n    function fetchHistory(userToken){\r\n\r\n        axios.post(apiGetHistory,{\r\n    \r\n          token   : userToken\r\n    \r\n        })\r\n        .then((res) => {\r\n\r\n            console.log(res.data.history)\r\n            setUserHistory(res.data.history)\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", res.data.history, { path: \"/\", expires: date })        \r\n        })\r\n        .catch(error => {\r\n            // console.log(error.response)\r\n            console.log(error)\r\n        })\r\n    \r\n    \r\n      }\r\n\r\n    const userHistoryCard = (\r\n\r\n        <div>\r\n        {isLogin && (\r\n\r\n            <div>\r\n                <Grid container style={{ marginTop : 70 }} justify='center'>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                            User History\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    container \r\n                    spacing={3} m={2}\r\n                    justify='center' \r\n                    style={{ marginTop : 10 }} >\r\n                        \r\n\r\n                {userHistory.map(item =>{\r\n                \r\n                return(\r\n                    <Grid item lg={2} xs={4} >\r\n                    <Card className={classes.root} style={{ height: '100%'}}>\r\n                        <CardActionArea>\r\n                        <Link underline='none' component={RouterLink} to={`/${item.Lang}/${item.ID}`}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            height=\"180\"\r\n                            src={item.CoverImg}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                {item.Name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                {item.LatestRead}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </Link>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                        \r\n                            <div onClick={() => {\r\n                                \r\n                                let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n                                // get target data\r\n                                let mangaIDCookies = item.ID\r\n                                let date = new Date(2030, 12)\r\n                                // filter with mangaNameCookies\r\n\r\n                                if(tempHistory.length == 1){\r\n\r\n                                    cookies.remove(\"Mangamee_Temp_History\" ,{ path: '/' })\r\n                                    DeleteDbUser()\r\n\r\n                                    \r\n                            \r\n                                }else{\r\n                            \r\n                                    let cookiesFilter = tempHistory.filter((item) => item.ID != mangaIDCookies);\r\n                                    // console.log(cookiesFilter)\r\n                                    cookies.set(\"Mangamee_Temp_History\", cookiesFilter, { path: \"/\", expires: date })\r\n                                    UpdateDbUser(cookiesFilter)\r\n                                    \r\n                                    \r\n                            \r\n                                }\r\n                            }}>\r\n                            <Button size=\"small\" color=\"secondary\" className={classes.mobileText}>\r\n                                Delete\r\n                            </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                    </Grid>\r\n                )})}\r\n                </Grid>\r\n            </div>  \r\n                \r\n        )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 150 }}>\r\n                {/* <Paper variant='outlined' component={Box} p={2}> */}\r\n                <Typography variant=\"h4\" component=\"h4\" color='textPrimary'>\r\n                    MANGAMEE\r\n                </Typography>\r\n                {/* </Paper> */}\r\n                </Grid>\r\n                \r\n                {userHistoryCard}\r\n                </MuiThemeProvider>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\endpoint.js",["72"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js",["73","74","75"],"import React, { useState, useEffect } from 'react'\r\nimport { apiManga, apiUpdateHistory } from \"../endpoint\";\r\nimport axios from 'axios'\r\nimport { useParams, Link as RouterLink } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    ListItem,\r\n    List,\r\n    ListItemText,\r\n    Divider,\r\n    CircularProgress\r\n\r\n } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nexport default function MangaChapter() {\r\n\r\n    // const classes = useStyles();\r\n    const { lang, manga_tile } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [chapter, setChapter] = useState([])\r\n    const [info, setInfo] = useState({\r\n        cover_img   : null,\r\n        summary     : null\r\n    })\r\n\r\n    function FetchManga() {\r\n        \r\n        axios.get(apiManga, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile\r\n            }\r\n        })\r\n\r\n        .then(res =>{\r\n        \r\n                // console.log(res.data.chapters)\r\n                // console.log(res.data.cover_img)\r\n                // console.log(res.data.summary)\r\n                setChapter(res.data.chapters)\r\n                setInfo({\r\n                    cover_img:res.data.cover_img,\r\n                    summary:res.data.summary,\r\n                    title:res.title    \r\n                })\r\n                \r\n                CreateOrUpdate(res.data.cover_img)\r\n                // console.log(res.data.chapters)\r\n                setLoading(false)\r\n                \r\n        })\r\n\r\n    }\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n    }\r\n\r\n    function CreateOrUpdate(coverImg) {\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n        console.log(userToken)\r\n\r\n        if(userToken != undefined){\r\n\r\n\r\n            if(tempHistory == undefined){\r\n\r\n                // creaate his\r\n                console.log('ga ada history')\r\n                CreateCookies(coverImg)\r\n\r\n            }else{\r\n\r\n                // update history\r\n                console.log('ada history')\r\n                console.log(tempHistory)\r\n                UpdateCookies(tempHistory, coverImg)\r\n                   \r\n            }    \r\n        }\r\n    }\r\n\r\n\r\n    function CreateCookies(coverImg){\r\n\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n\r\n        let userHistory = [\r\n            {\r\n                ID : manga_tile,\r\n                Lang : lang,\r\n                Name : tempName,\r\n                CoverImg : coverImg,\r\n                LatestRead : '-'\r\n            }\r\n        ]\r\n        \r\n        let date = new Date(2030, 12)\r\n        cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n        UpdateDbUser(userHistory)\r\n\r\n    }\r\n\r\n    function UpdateCookies(tempHistory, coverImg) {\r\n\r\n        let userHistory = tempHistory\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n        // checking manga is input or not if, ga da, tambahin data,if ada, update\r\n\r\n        let checkName = manga_tile\r\n        let findName = userHistory.find((item) =>{\r\n            return item.ID === checkName\r\n        })\r\n\r\n        console.log(userHistory)\r\n\r\n        if(findName === undefined){\r\n            \r\n            userHistory.push(\r\n                \r\n                {\r\n                    ID : manga_tile,\r\n                    Lang : lang,\r\n                    Name : tempName,\r\n                    CoverImg : coverImg,\r\n                    LatestRead : '-'\r\n\r\n                }\r\n            )\r\n\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n            UpdateDbUser(userHistory)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        FetchManga()\r\n       \r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n\r\n            {loading && (\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 150 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                </Grid>\r\n            )}\r\n\r\n            {!loading && (\r\n\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                    <Grid item lg={8} xs={12}>\r\n                    <Card style={{ height: '100%' }}>\r\n                        <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            // height='60%'\r\n                            src={info.cover_img}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"h6\">\r\n                                 summary\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {info.summary}\r\n                            </Typography>\r\n                            <br />\r\n                            <Divider />\r\n                            <List>\r\n                                {chapter.map(item =>{   \r\n                                    return(\r\n                                    \r\n                                    <ListItem button>\r\n                                        <Link underline='none' component={RouterLink} to={`/${lang}/${manga_tile}/${item.link}`}>\r\n                                            <ListItemText primary={item.chapter_name} />\r\n                                        </Link>\r\n                                    </ListItem>\r\n                                    \r\n                                )})}\r\n                            </List>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Manga.js",["76"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { apiPage, apiUpdateHistory } from \"../endpoint\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    CardMedia,\r\n    CircularProgress\r\n\r\n } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nexport default function Manga() {\r\n\r\n\r\n    const [list, setList] = useState([]);\r\n    const { lang, chapter, manga_tile } = useParams()\r\n    // const { chapter } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleImageError = (e) => {\r\n        e.target.onerror = null;\r\n        // e.target.style.display = 'none'\r\n        e.target.src = \"\"\r\n    }\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    function updateCookiesChapter(){\r\n\r\n        // get data\r\n        let MangaID = manga_tile\r\n        let lastChapter = chapter\r\n        let TempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n        // update chapter .map cookies\r\n    \r\n        let newChapter = TempHistory.map(obj =>\r\n            obj.ID === MangaID ? { ...obj, LatestRead: lastChapter } : obj\r\n        );\r\n    \r\n        // jsonvalue\r\n        console.log(newChapter)\r\n        let date = new Date(2030, 12)\r\n        cookies.set(\"Mangamee_Temp_History\", newChapter, { path: \"/\", expires: date })\r\n        UpdateDbUser(newChapter)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        let mounted = true;\r\n        axios.get(apiPage, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile,\r\n                chapter:chapter\r\n            }\r\n        })\r\n\r\n        .then(res =>{\r\n            if(mounted){\r\n                // console.log(res.data)\r\n                setList(res.data)\r\n                if(console.log(cookies.get(\"Mangamee_Login_Token\")) !== undefined){\r\n                    updateCookiesChapter()\r\n                    setLoading(false)\r\n                }\r\n                \r\n                setLoading(false)\r\n            }\r\n        })\r\n\r\n        // async function fetchData(){\r\n        //     const browseData = await axios.get(browse);\r\n        //     if(mounted){\r\n        //         console.log(browseData.data)\r\n        //         setList(browseData.data)\r\n        //     }\r\n        // }\r\n\r\n        // fetchData()\r\n        // return () => mounted = false;\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                \r\n                {loading && (\r\n                    <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    </Grid>\r\n                )}\r\n                \r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 80 }}>\r\n                    <Grid item lg={8} xs={12}>\r\n                        {list.map(item =>{\r\n                            return(\r\n \r\n                                <CardMedia component='img' src={item.image} onError={handleImageError}/>\r\n\r\n                        )})}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Container>   \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js",["77","78","79","80"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js",["81","82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":15,"column":8,"nodeType":"90","messageId":"91","endLine":15,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":90,"column":18,"nodeType":"94","messageId":"95","endLine":90,"endColumn":20},{"ruleId":"88","severity":1,"message":"96","line":37,"column":21,"nodeType":"90","messageId":"91","endLine":37,"endColumn":31},{"ruleId":"88","severity":1,"message":"97","line":20,"column":5,"nodeType":"90","messageId":"91","endLine":20,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":21,"column":5,"nodeType":"90","messageId":"91","endLine":21,"endColumn":8},{"ruleId":"88","severity":1,"message":"99","line":66,"column":44,"nodeType":"90","messageId":"91","endLine":66,"endColumn":56},{"ruleId":"88","severity":1,"message":"100","line":66,"column":58,"nodeType":"90","messageId":"91","endLine":66,"endColumn":63},{"ruleId":"88","severity":1,"message":"97","line":15,"column":5,"nodeType":"90","messageId":"91","endLine":15,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":16,"column":5,"nodeType":"90","messageId":"91","endLine":16,"endColumn":8},{"ruleId":"101","severity":1,"message":"102","line":66,"column":8,"nodeType":"103","endLine":66,"endColumn":10,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":116,"column":22,"nodeType":"94","messageId":"95","endLine":116,"endColumn":24},{"ruleId":"92","severity":1,"message":"105","line":199,"column":55,"nodeType":"94","messageId":"95","endLine":199,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":208,"column":94,"nodeType":"94","messageId":"95","endLine":208,"endColumn":96},{"ruleId":"88","severity":1,"message":"106","line":2,"column":7,"nodeType":"90","messageId":"91","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":85,"column":22,"nodeType":"94","messageId":"95","endLine":85,"endColumn":24},{"ruleId":"92","severity":1,"message":"105","line":88,"column":28,"nodeType":"94","messageId":"95","endLine":88,"endColumn":30},{"ruleId":"101","severity":1,"message":"107","line":164,"column":8,"nodeType":"103","endLine":164,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":98,"column":8,"nodeType":"103","endLine":98,"endColumn":10,"suggestions":"110"},{"ruleId":"88","severity":1,"message":"97","line":14,"column":5,"nodeType":"90","messageId":"91","endLine":14,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":15,"column":5,"nodeType":"90","messageId":"91","endLine":15,"endColumn":8},{"ruleId":"88","severity":1,"message":"99","line":50,"column":44,"nodeType":"90","messageId":"91","endLine":50,"endColumn":56},{"ruleId":"88","severity":1,"message":"100","line":50,"column":58,"nodeType":"90","messageId":"91","endLine":50,"endColumn":63},{"ruleId":"88","severity":1,"message":"97","line":12,"column":5,"nodeType":"90","messageId":"91","endLine":12,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":13,"column":5,"nodeType":"90","messageId":"91","endLine":13,"endColumn":8},{"ruleId":"92","severity":1,"message":"93","line":59,"column":27,"nodeType":"94","messageId":"95","endLine":59,"endColumn":29},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'MoreIcon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setLoading' is assigned a value but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'fieldsErrors' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["113"],"Expected '===' and instead saw '=='.","'MangameeBeLocal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchManga'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has missing dependencies: 'chapter', 'lang', 'manga_tile', and 'updateCookiesChapter'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [tokenCheck]",{"range":"122","text":"123"},"Update the dependencies array to be: [FetchManga]",{"range":"124","text":"125"},"Update the dependencies array to be: [chapter, lang, manga_tile, updateCookiesChapter]",{"range":"126","text":"127"},[1369,1371],"[tokenCheck]",[4139,4141],"[FetchManga]",[2582,2584],"[chapter, lang, manga_tile, updateCookiesChapter]"]