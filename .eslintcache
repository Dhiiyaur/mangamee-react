[{"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js":"1","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js":"2","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js":"3","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js":"4","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js":"5","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js":"6","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js":"7","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\endpoint.js":"8","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js":"9","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Manga.js":"10","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js":"11","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":1046,"mtime":1612782329570,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":6711,"mtime":1612868983850,"results":"17","hashOfConfig":"14"},{"size":3642,"mtime":1612871260647,"results":"18","hashOfConfig":"14"},{"size":7829,"mtime":1612787868934,"results":"19","hashOfConfig":"14"},{"size":7354,"mtime":1612787388831,"results":"20","hashOfConfig":"14"},{"size":754,"mtime":1612782293808,"results":"21","hashOfConfig":"14"},{"size":6671,"mtime":1612787301915,"results":"22","hashOfConfig":"14"},{"size":3422,"mtime":1612764944490,"results":"23","hashOfConfig":"14"},{"size":5013,"mtime":1612785298662,"results":"24","hashOfConfig":"14"},{"size":6689,"mtime":1612785258174,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tfuhah",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js",[],["58","59"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js",["60","61"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js",["62","63"],"import React, { useState } from 'react'\r\nimport { apiSearch } from \"../endpoint\";\r\nimport axios from 'axios';\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    TextField,\r\n    CircularProgress,\r\n    CssBaseline,\r\n\r\n } from '@material-ui/core'\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    buttonColor: {\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: \"red\"\r\n        }\r\n      }\r\n  }));\r\n  \r\nexport default function Search() {\r\n\r\n    const classes = useStyles();\r\n    const [searchResult, setSearchResult] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [notFound, setnotFound] = useState(false)\r\n    const [langOption, setLangOption] = useState('EN');\r\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    function fetchData(title, langOption) {\r\n        \r\n        axios.get(apiSearch, {\r\n            params:{\r\n\r\n                lang:langOption,\r\n                manga_title:title\r\n            }\r\n        })\r\n        .then((res) =>{\r\n            console.log(res.data.length);\r\n            if(res.data.length !== 0){\r\n                setSearchResult(res.data);\r\n                setLoading(false)\r\n            }else{\r\n                setnotFound(true)\r\n                setLoading(false)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleLangSelect = (event, newLang) => {\r\n        setLangOption(newLang);\r\n    };\r\n\r\n    const onSubmitLogin = data => {\r\n\r\n        console.log(data)\r\n        console.log(langOption)\r\n        setLoading(true)\r\n        setnotFound(false)\r\n        fetchData(data.title_manga, langOption);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop : 120 }}>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmitLogin)}>\r\n                    <Controller\r\n                        name='title_manga'\r\n                        as={\r\n\r\n                            <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title_manga\"\r\n                            label=\"Manga Title\"\r\n                            name=\"title_manga\"\r\n                            autoFocus      \r\n                        />\r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n\r\n                    />\r\n\r\n                <ToggleButtonGroup\r\n                        value={langOption}\r\n                        exclusive\r\n                        onChange={handleLangSelect}\r\n                        aria-label=\"lang selected\"\r\n                    >\r\n                    <ToggleButton value=\"EN\" aria-label=\"left aligned\" className={classes.buttonColor}>\r\n                        ENG\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"ID\" aria-label=\"centered\" className={classes.buttonColor}>\r\n                        IND\r\n                    </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n\r\n                </form>\r\n                </div>\r\n                </Container>\r\n\r\n            \r\n                {loading && (\r\n\r\n                    <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    </Grid>\r\n\r\n                )}\r\n\r\n                {!loading && (\r\n\r\n                    <div>\r\n                    {!notFound &&(\r\n\r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                        {searchResult.map(item =>{\r\n                            return(\r\n                            \r\n                            <Grid item lg={2} xs={4}>\r\n                                    <Card className={classes.root} style={{ height: '100%' }}>\r\n                                        <div onClick={() => {\r\n                                        \r\n                                            let MangeName = item.name\r\n                                            let date = new Date(2030, 12)\r\n                                            cookies.set(\"Mangamee_Temp_Name\", MangeName, { path: \"/\", expires: date })\r\n                                    \r\n                                        }}>\r\n                                        <CardActionArea>\r\n                                        <Link underline='none' component={RouterLink} to={`/${langOption}/${item.link}`}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\" \"\r\n                                            height=\"180\"\r\n                                            src={item.thumbnail_image}\r\n                                            title=\"manga title\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" className={classes.mobileText}>\r\n                                                {item.name}\r\n                                            </Typography>\r\n                                            <br/>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                                {item.latest_chapter} chapter - {item.status}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </Link>\r\n                                        </CardActionArea>\r\n                                        </div>\r\n                                    </Card>\r\n                            </Grid> \r\n                        )})}\r\n                        </Grid>\r\n                    )}\r\n                    \r\n                    {notFound &&(\r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                            Not Found\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                    )}\r\n                    </div>\r\n                )}\r\n            </MuiThemeProvider>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js",["64","65","66","67"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { apiUpdateHistory, apiGetHistory, apiDeleteHistory } from \"../endpoint\";\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    Button,\r\n\r\n } from '@material-ui/core'\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport {MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(6),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    }\r\n  }));\r\n\r\nexport default function Home() {\r\n\r\n    const [userHistory, setUserHistory] = useState([])\r\n    const [isLogin, setisLogin] = useState(false)\r\n    const classes = useStyles();\r\n\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        tokenCheck();\r\n\r\n    }, [])\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    function DeleteDbUser() {\r\n        \r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiDeleteHistory,{\r\n\r\n            token   : token,\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    function tokenCheck(){\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        // console.log(cookies.get(\"Mangamee_Login_Token\"))\r\n        console.log(userToken)\r\n    \r\n        if(userToken != undefined){\r\n    \r\n            fetchHistory(userToken);\r\n            setisLogin(true)\r\n    \r\n        }\r\n    \r\n      }\r\n\r\n    function fetchHistory(userToken){\r\n\r\n        axios.post(apiGetHistory,{\r\n    \r\n          token   : userToken\r\n    \r\n        })\r\n        .then((res) => {\r\n\r\n            console.log(res.data.history)\r\n            setUserHistory(res.data.history)\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", res.data.history, { path: \"/\", expires: date })        \r\n        })\r\n        .catch(error => {\r\n            // console.log(error.response)\r\n            console.log(error)\r\n        })\r\n    \r\n    \r\n      }\r\n\r\n    const userHistoryCard = (\r\n\r\n        <div>\r\n        {isLogin && (\r\n\r\n            <div>\r\n                <Grid container style={{ marginTop : 70 }} justify='center'>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                            User History\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid \r\n                    container \r\n                    spacing={3} m={2}\r\n                    justify='center' \r\n                    style={{ marginTop : 10 }} >\r\n                        \r\n\r\n                {userHistory.map(item =>{\r\n                \r\n                return(\r\n                    <Grid item lg={2} xs={4} >\r\n                    <Card className={classes.root} style={{ height: '100%'}}>\r\n                        <CardActionArea>\r\n                        <Link underline='none' component={RouterLink} to={`/${item.Lang}/${item.ID}`}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            height=\"180\"\r\n                            src={item.CoverImg}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                {item.Name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.mobileText}>\r\n                                {item.LatestRead}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </Link>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                        \r\n                            <div onClick={() => {\r\n                                \r\n                                let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n                                // get target data\r\n                                let mangaIDCookies = item.ID\r\n                                let date = new Date(2030, 12)\r\n                                // filter with mangaNameCookies\r\n\r\n                                if(tempHistory.length == 1){\r\n\r\n                                    cookies.remove(\"Mangamee_Temp_History\" ,{ path: '/' })\r\n                                    DeleteDbUser()\r\n\r\n                                    \r\n                            \r\n                                }else{\r\n                            \r\n                                    let cookiesFilter = tempHistory.filter((item) => item.ID != mangaIDCookies);\r\n                                    // console.log(cookiesFilter)\r\n                                    cookies.set(\"Mangamee_Temp_History\", cookiesFilter, { path: \"/\", expires: date })\r\n                                    UpdateDbUser(cookiesFilter)\r\n                                    \r\n                                    \r\n                            \r\n                                }\r\n                            }}>\r\n                            <Button size=\"small\" color=\"secondary\" className={classes.mobileText}>\r\n                                Delete\r\n                            </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                    </Grid>\r\n                )})}\r\n                </Grid>\r\n            </div>  \r\n                \r\n        )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 150 }}>\r\n                {/* <Paper variant='outlined' component={Box} p={2}> */}\r\n                <Typography variant=\"h4\" component=\"h4\" color='textPrimary'>\r\n                    MANGAMEE\r\n                </Typography>\r\n                {/* </Paper> */}\r\n                </Grid>\r\n                \r\n                {userHistoryCard}\r\n                </MuiThemeProvider>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\endpoint.js",["68"],"const MangameeBe = 'https://be-mangamee.herokuapp.com';\r\nconst MangameeBeLocal = 'http://127.0.0.1:8000';\r\n\r\n\r\nconst apiURL = '/api';\r\n\r\nexport const endpoint = `${MangameeBe}${apiURL}`;\r\n\r\n// export const endpoint = `${MangameeBeLocal}${apiURL}`;\r\n\r\nexport const apiBrowse = `${endpoint}/browse/`;\r\nexport const apiSearch = `${endpoint}/search/`;\r\nexport const apiManga = `${endpoint}/manga/`;\r\nexport const apiPage = `${endpoint}/page/`;\r\n\r\n// auth user\r\nexport const apiLogin = `${endpoint}/auth/login/`;\r\nexport const apiRegister = `${endpoint}/auth/register/`;\r\n\r\n\r\nexport const apiGetHistory = `${endpoint}/gethistory/`;\r\nexport const apiUpdateHistory = `${endpoint}/updatehistory/`;\r\nexport const apiDeleteHistory = `${endpoint}/deletehistory/`;\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js",["69","70","71"],"import React, { useState, useEffect } from 'react'\r\nimport { apiManga, apiUpdateHistory } from \"../endpoint\";\r\nimport axios from 'axios'\r\nimport { useParams, Link as RouterLink } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    ListItem,\r\n    List,\r\n    ListItemText,\r\n    Divider,\r\n    CircularProgress\r\n\r\n } from '@material-ui/core'\r\n\r\n import {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nexport default function MangaChapter() {\r\n\r\n    // const classes = useStyles();\r\n    const { lang, manga_tile } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [chapter, setChapter] = useState([])\r\n    const [info, setInfo] = useState({\r\n        cover_img   : null,\r\n        summary     : null\r\n    })\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    function FetchManga() {\r\n        \r\n        axios.get(apiManga, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile\r\n            }\r\n        })\r\n\r\n        .then(res =>{\r\n        \r\n                // console.log(res.data.chapters)\r\n                // console.log(res.data.cover_img)\r\n                // console.log(res.data.summary)\r\n                setChapter(res.data.chapters)\r\n                setInfo({\r\n                    cover_img:res.data.cover_img,\r\n                    summary:res.data.summary,\r\n                    title:res.title    \r\n                })\r\n                \r\n                CreateOrUpdate(res.data.cover_img)\r\n                // console.log(res.data.chapters)\r\n                setLoading(false)\r\n                \r\n        })\r\n\r\n    }\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n    }\r\n\r\n    function CreateOrUpdate(coverImg) {\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n        console.log(userToken)\r\n\r\n        if(userToken != undefined){\r\n\r\n\r\n            if(tempHistory == undefined){\r\n\r\n                // creaate his\r\n                console.log('ga ada history')\r\n                CreateCookies(coverImg)\r\n\r\n            }else{\r\n\r\n                // update history\r\n                console.log('ada history')\r\n                console.log(tempHistory)\r\n                UpdateCookies(tempHistory, coverImg)\r\n                   \r\n            }    \r\n        }\r\n    }\r\n\r\n\r\n    function CreateCookies(coverImg){\r\n\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n\r\n        let userHistory = [\r\n            {\r\n                ID : manga_tile,\r\n                Lang : lang,\r\n                Name : tempName,\r\n                CoverImg : coverImg,\r\n                LatestRead : '-'\r\n            }\r\n        ]\r\n        \r\n        let date = new Date(2030, 12)\r\n        cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n        UpdateDbUser(userHistory)\r\n\r\n    }\r\n\r\n    function UpdateCookies(tempHistory, coverImg) {\r\n\r\n        let userHistory = tempHistory\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n        // checking manga is input or not if, ga da, tambahin data,if ada, update\r\n\r\n        let checkName = manga_tile\r\n        let findName = userHistory.find((item) =>{\r\n            return item.ID === checkName\r\n        })\r\n\r\n        console.log(userHistory)\r\n\r\n        if(findName === undefined){\r\n            \r\n            userHistory.push(\r\n                \r\n                {\r\n                    ID : manga_tile,\r\n                    Lang : lang,\r\n                    Name : tempName,\r\n                    CoverImg : coverImg,\r\n                    LatestRead : '-'\r\n\r\n                }\r\n            )\r\n\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n            UpdateDbUser(userHistory)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        FetchManga()\r\n       \r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MuiThemeProvider theme={theme}>\r\n            <Container>\r\n\r\n            {loading && (\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 150 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                </Grid>\r\n            )}\r\n\r\n            {!loading && (\r\n\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                    <Grid item lg={8} xs={12}>\r\n                    <Card style={{ height: '100%' }}>\r\n                        <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            // height='60%'\r\n                            src={info.cover_img}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"h6\">\r\n                                 summary\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {info.summary}\r\n                            </Typography>\r\n                            <br />\r\n                            <Divider />\r\n                            <List>\r\n                                {chapter.map(item =>{   \r\n                                    return(\r\n                                    \r\n                                    <ListItem button>\r\n                                        <Link underline='none' component={RouterLink} to={`/${lang}/${manga_tile}/${item.link}`}>\r\n                                            <ListItemText style={{ color: '#FFFFFF' }} primary={item.chapter_name} />\r\n                                        </Link>\r\n                                    </ListItem>\r\n                                    \r\n                                )})}\r\n                            </List>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            </Container>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Manga.js",["72"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { apiPage, apiUpdateHistory } from \"../endpoint\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    CardMedia,\r\n    CircularProgress\r\n\r\n } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nexport default function Manga() {\r\n\r\n\r\n    const [list, setList] = useState([]);\r\n    const { lang, chapter, manga_tile } = useParams()\r\n    // const { chapter } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleImageError = (e) => {\r\n        e.target.onerror = null;\r\n        // e.target.style.display = 'none'\r\n        e.target.src = \"\"\r\n    }\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    function updateCookiesChapter(){\r\n\r\n        // get data\r\n        let MangaID = manga_tile\r\n        let lastChapter = chapter\r\n        let TempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n        // update chapter .map cookies\r\n    \r\n        let newChapter = TempHistory.map(obj =>\r\n            obj.ID === MangaID ? { ...obj, LatestRead: lastChapter } : obj\r\n        );\r\n    \r\n        // jsonvalue\r\n        console.log(newChapter)\r\n        let date = new Date(2030, 12)\r\n        cookies.set(\"Mangamee_Temp_History\", newChapter, { path: \"/\", expires: date })\r\n        UpdateDbUser(newChapter)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        let mounted = true;\r\n        axios.get(apiPage, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile,\r\n                chapter:chapter\r\n            }\r\n        })\r\n\r\n        .then(res =>{\r\n            if(mounted){\r\n                // console.log(res.data)\r\n                setList(res.data)\r\n                if(console.log(cookies.get(\"Mangamee_Login_Token\")) !== undefined){\r\n                    updateCookiesChapter()\r\n                    setLoading(false)\r\n                }\r\n                \r\n                setLoading(false)\r\n            }\r\n        })\r\n\r\n        // async function fetchData(){\r\n        //     const browseData = await axios.get(browse);\r\n        //     if(mounted){\r\n        //         console.log(browseData.data)\r\n        //         setList(browseData.data)\r\n        //     }\r\n        // }\r\n\r\n        // fetchData()\r\n        // return () => mounted = false;\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                \r\n                {loading && (\r\n                    <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    </Grid>\r\n                )}\r\n                \r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 80 }}>\r\n                    <Grid item lg={8} xs={12}>\r\n                        {list.map(item =>{\r\n                            return(\r\n \r\n                                <CardMedia component='img' src={item.image} onError={handleImageError}/>\r\n\r\n                        )})}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Container>   \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js",["73","74"],"import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { apiLogin } from \"../endpoint\";\r\n\r\nimport { \r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    Container,\r\n    TextField,\r\n    Link,\r\n    Grid,\r\n    Typography,\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      \r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nexport default function SignIn() {\r\n\r\n    const classes = useStyles();\r\n    const { handleSubmit, control, errors: fieldsErrors, reset } = useForm();\r\n    const [loginError, setloginError] = useState(false)\r\n    const cookies = new Cookies()\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    const onSubmitLogin = data => {\r\n\r\n        axios.post(apiLogin,{\r\n\r\n            email   : data.email,\r\n            password: data.password\r\n        })\r\n        \r\n        .then((res) => {\r\n            // console.log(res.data)\r\n            // console.log(res.data.token)\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Login_Token\", res.data.token, { path: \"/\", expires: date })\r\n            window.location.href='/'\r\n\r\n        })\r\n\r\n        .catch(error => {\r\n            // console.log(error.response)\r\n            setloginError(true)\r\n        })\r\n    \r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MuiThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop : 200 }}>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" color=\"textPrimary\">\r\n                Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmitLogin)}>\r\n\r\n                <Controller\r\n                    name='email'\r\n                    as={\r\n\r\n                        <TextField\r\n                        variant=\"filled\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        \r\n                        \r\n                    />\r\n                }\r\n                control={control}\r\n                defaultValue=\"\"\r\n                rules={{\r\n                    required: 'Required'\r\n                  }}\r\n\r\n                />\r\n\r\n                <Controller\r\n                    name='password'\r\n                    as={\r\n\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    }\r\n\r\n                    control={control}\r\n                    defaultValue=\"\"\r\n                    rules={{\r\n                        required: 'Required'\r\n                      }}\r\n                />\r\n                \r\n                {loginError && (\r\n                    <Typography color='error'>\r\n                        Account not found\r\n                    </Typography>\r\n                )}\r\n                \r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    \r\n                >\r\n                    Sign In\r\n                </Button>\r\n\r\n                <Grid container>\r\n                    <Grid item>\r\n                    <Link href=\"/auth/signup\" variant=\"body2\">\r\n                        {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n            </Container>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js",["75"],"import React, { useState} from 'react'\r\nimport axios from 'axios';\r\nimport { apiRegister } from \"../endpoint\";\r\n\r\nimport { \r\n    Avatar,\r\n    Button,\r\n    CssBaseline,\r\n    Container,\r\n    TextField,\r\n    Typography,\r\n\r\n} from \"@material-ui/core\";\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nexport default function SignUp() {\r\n\r\n    const classes = useStyles();\r\n    const { handleSubmit, control } = useForm();\r\n    const [formError, setformError] = useState(false)\r\n    const [registerError, setRegisterError] = useState(false)\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n    const onSubmitRegister = data => {\r\n\r\n        // console.log(data)\r\n        if(data.password1 != data.password2){\r\n        \r\n            setformError(true)\r\n        }\r\n\r\n        axios.post(apiRegister,{\r\n\r\n            username : data.username,\r\n            email    : data.email,\r\n            password : data.password1\r\n        })\r\n\r\n        .then((res) => {\r\n            // console.log(res.data)\r\n            window.location.href='/auth/signin/'\r\n\r\n        })\r\n\r\n        .catch(error => {\r\n            // console.log(error.response)\r\n            setRegisterError(true)\r\n        })\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <MuiThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop : 120 }}>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit(onSubmitRegister)}>\r\n                    <Controller\r\n                        name='username'\r\n                        as={\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"User Name\"\r\n                                name=\"username\"\r\n                                // autoComplete=\"username\"\r\n                                autoFocus\r\n                            />\r\n                    }\r\n\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n\r\n                    />\r\n                    <Controller\r\n                        name='email'\r\n                        as={\r\n\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                    \r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n                    />\r\n\r\n                    {registerError && (\r\n                        <Typography color='error'>\r\n                            Email already exist\r\n                        </Typography>\r\n                    )}\r\n\r\n                    <Controller\r\n                        name='password1'\r\n                        as={\r\n\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password1\"\r\n                            label=\"password\"\r\n                            type=\"password\"\r\n                            id=\"password1\"\r\n                            \r\n                        />\r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n                    />\r\n                    <Controller\r\n                        name='password2'\r\n                        as={\r\n\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password2\"\r\n                            label=\"confirm-password\"\r\n                            type=\"password\"\r\n                            id=\"password2\"\r\n                            \r\n                        />\r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required',\r\n                            \r\n                        }}\r\n                    />\r\n\r\n                    {formError && (\r\n                    <Typography color='error'>\r\n                        Password didnt  match\r\n                    </Typography>\r\n                    )}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n\r\n                    </form>\r\n                </div>\r\n                </Container>\r\n                </MuiThemeProvider>    \r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":15,"column":8,"nodeType":"82","messageId":"83","endLine":15,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":97,"column":18,"nodeType":"86","messageId":"87","endLine":97,"endColumn":20},{"ruleId":"80","severity":1,"message":"88","line":64,"column":44,"nodeType":"82","messageId":"83","endLine":64,"endColumn":56},{"ruleId":"80","severity":1,"message":"89","line":64,"column":58,"nodeType":"82","messageId":"83","endLine":64,"endColumn":63},{"ruleId":"90","severity":1,"message":"91","line":64,"column":8,"nodeType":"92","endLine":64,"endColumn":10,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"85","line":114,"column":22,"nodeType":"86","messageId":"87","endLine":114,"endColumn":24},{"ruleId":"84","severity":1,"message":"94","line":197,"column":55,"nodeType":"86","messageId":"87","endLine":197,"endColumn":57},{"ruleId":"84","severity":1,"message":"85","line":206,"column":94,"nodeType":"86","messageId":"87","endLine":206,"endColumn":96},{"ruleId":"80","severity":1,"message":"95","line":2,"column":7,"nodeType":"82","messageId":"83","endLine":2,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":95,"column":22,"nodeType":"86","messageId":"87","endLine":95,"endColumn":24},{"ruleId":"84","severity":1,"message":"94","line":98,"column":28,"nodeType":"86","messageId":"87","endLine":98,"endColumn":30},{"ruleId":"90","severity":1,"message":"96","line":174,"column":8,"nodeType":"92","endLine":174,"endColumn":10,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":98,"column":8,"nodeType":"92","endLine":98,"endColumn":10,"suggestions":"99"},{"ruleId":"80","severity":1,"message":"88","line":48,"column":44,"nodeType":"82","messageId":"83","endLine":48,"endColumn":56},{"ruleId":"80","severity":1,"message":"89","line":48,"column":58,"nodeType":"82","messageId":"83","endLine":48,"endColumn":63},{"ruleId":"84","severity":1,"message":"85","line":57,"column":27,"nodeType":"86","messageId":"87","endLine":57,"endColumn":29},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'MoreIcon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'fieldsErrors' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["102"],"Expected '===' and instead saw '=='.","'MangameeBeLocal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchManga'. Either include it or remove the dependency array.",["103"],"React Hook useEffect has missing dependencies: 'chapter', 'lang', 'manga_tile', and 'updateCookiesChapter'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [tokenCheck]",{"range":"111","text":"112"},"Update the dependencies array to be: [FetchManga]",{"range":"113","text":"114"},"Update the dependencies array to be: [chapter, lang, manga_tile, updateCookiesChapter]",{"range":"115","text":"116"},[1348,1350],"[tokenCheck]",[4316,4318],"[FetchManga]",[2582,2584],"[chapter, lang, manga_tile, updateCookiesChapter]"]