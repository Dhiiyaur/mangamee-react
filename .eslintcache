[{"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js":"1","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js":"2","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js":"3","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js":"4","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js":"5","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js":"6","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js":"7","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js":"8","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js":"9","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js":"10","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\index.js":"11","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\App.js":"12","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\reportWebVitals.js":"13","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Navbar.js":"14","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Browse.js":"15","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\MangaChapter.js":"16","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Home.js":"17","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\SignIn.js":"18","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\SignUp.js":"19","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Search.js":"20","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\config\\endpoint.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":1057,"mtime":1614846202011,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":6624,"mtime":1614846301767,"results":"26","hashOfConfig":"23"},{"size":3649,"mtime":1614654519128,"results":"27","hashOfConfig":"23"},{"size":8613,"mtime":1614903105081,"results":"28","hashOfConfig":"23"},{"size":7863,"mtime":1614846147294,"results":"29","hashOfConfig":"23"},{"size":14482,"mtime":1614924675519,"results":"30","hashOfConfig":"23"},{"size":5113,"mtime":1614904079512,"results":"31","hashOfConfig":"23"},{"size":7014,"mtime":1614931740393,"results":"32","hashOfConfig":"23"},{"size":517,"mtime":1617262192530,"results":"33","hashOfConfig":"34"},{"size":1071,"mtime":1617265788855,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1617262192530,"results":"36","hashOfConfig":"34"},{"size":7060,"mtime":1617265788862,"results":"37","hashOfConfig":"34"},{"size":3819,"mtime":1617265788857,"results":"38","hashOfConfig":"34"},{"size":14490,"mtime":1617265788860,"results":"39","hashOfConfig":"34"},{"size":10133,"mtime":1617265788859,"results":"40","hashOfConfig":"34"},{"size":5037,"mtime":1617265788865,"results":"41","hashOfConfig":"34"},{"size":7095,"mtime":1617265788867,"results":"42","hashOfConfig":"34"},{"size":8823,"mtime":1617265788864,"results":"43","hashOfConfig":"34"},{"size":754,"mtime":1617265788930,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"z3gubh",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m1ml5h",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\index.js",[],["94","95"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\App.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\reportWebVitals.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Navbar.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Browse.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Search.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\Home.js",["96"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { apiUpdateHistory, apiGetHistory, apiDeleteHistory } from \"../endpoint\";\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    Button,\r\n\r\n } from '@material-ui/core'\r\n\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport {MuiThemeProvider} from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(6),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    }\r\n  }));\r\n\r\nexport default function Home() {\r\n\r\n    const [userHistory, setUserHistory] = useState([])\r\n    const [isLogin, setisLogin] = useState(false)\r\n    const classes = useStyles();\r\n\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        tokenCheck();\r\n\r\n    }, [])\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            // console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    function DeleteDbUser() {\r\n        \r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiDeleteHistory,{\r\n\r\n            token   : token,\r\n            \r\n        })\r\n        .then((res) => {\r\n            \r\n            // console.log(res.status)\r\n            if(res.status === 200){\r\n\r\n                window.location.href='/'\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    function tokenCheck(){\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        // console.log(cookies.get(\"Mangamee_Login_Token\"))\r\n        // console.log(userToken)\r\n    \r\n        if(userToken !== undefined){\r\n    \r\n            fetchHistory(userToken);\r\n            setisLogin(true)\r\n    \r\n        }\r\n    \r\n      }\r\n\r\n    function fetchHistory(userToken){\r\n\r\n        axios.post(apiGetHistory,{\r\n    \r\n          token   : userToken\r\n    \r\n        })\r\n        .then((res) => {\r\n\r\n            // console.log(res.data.history)\r\n            // console.log(res.data)\r\n            if(res.data.history !== null){\r\n\r\n                setUserHistory(res.data.history)\r\n                let date = new Date(2030, 12)\r\n                cookies.set(\"Mangamee_Temp_History\", res.data.history, { path: \"/\", expires: date })  \r\n\r\n            }\r\n      \r\n        })\r\n        .catch(error => {\r\n            // console.log(error.response)\r\n            console.log(error)\r\n        })\r\n    \r\n    \r\n      }\r\n      \r\n    const homeTitle = (\r\n        <div>\r\n        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 125 }}>\r\n            <Typography variant=\"h4\" component=\"h4\" color='textPrimary'>\r\n                MANGAMEE\r\n            </Typography>\r\n        </Grid>\r\n        </div>\r\n    )\r\n\r\n    const userHistoryCard = (\r\n\r\n        <div>\r\n        {isLogin && (\r\n\r\n            <div>\r\n                <Grid container style={{ marginTop : 50 }} justify='center'>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">\r\n                            User History\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid \r\n                    container \r\n                    spacing={3} m={2}\r\n                    justify='center' \r\n                    style={{ marginTop : 10 }} >\r\n                        \r\n\r\n                {userHistory.map(item =>{\r\n                \r\n                return(\r\n                    <Grid item lg={2} xs={4} >\r\n                    <Card className={classes.root} style={{ height: '100%'}}>\r\n                        <CardActionArea>\r\n                        <Link underline='none' component={RouterLink} to={`/${item.Lang}/${item.ID}`}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            height=\"180\"\r\n                            src={item.CoverImg}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography noWrap \r\n                                        variant=\"body2\" \r\n                                        color=\"textSecondary\" \r\n                                        component=\"p\" \r\n                                        className={classes.mobileText}>\r\n\r\n                                {item.Name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" \r\n                                        color=\"textSecondary\" \r\n                                        component=\"p\" \r\n                                        className={classes.mobileText}>\r\n\r\n\r\n                                {item.LatestRead}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </Link>\r\n                        </CardActionArea>\r\n                        <CardActions>\r\n                        \r\n                            <div onClick={() => {\r\n                                \r\n                                let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n                                // get target data\r\n                                let mangaIDCookies = item.ID\r\n                                let date = new Date(2030, 12)\r\n                                // filter with mangaNameCookies\r\n\r\n                                if(tempHistory.length === 1){\r\n\r\n                                    cookies.remove(\"Mangamee_Temp_History\" ,{ path: '/' })\r\n                                    DeleteDbUser()\r\n\r\n                                    \r\n                            \r\n                                }else{\r\n                            \r\n                                    let cookiesFilter = tempHistory.filter((item) => item.ID !== mangaIDCookies);\r\n                                    // console.log(cookiesFilter)\r\n                                    cookies.set(\"Mangamee_Temp_History\", cookiesFilter, { path: \"/\", expires: date })\r\n                                    UpdateDbUser(cookiesFilter)\r\n                                    \r\n                                    \r\n                            \r\n                                }\r\n                            }}>\r\n                            <Button size=\"small\" \r\n                                    color=\"secondary\" \r\n                                    className={classes.mobileText}>\r\n                                        \r\n                                Delete\r\n                            </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                    </Grid>\r\n                )})}\r\n                </Grid>\r\n            </div>  \r\n                \r\n        )}\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                {homeTitle}\r\n                {userHistoryCard}\r\n                </MuiThemeProvider>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\MangaChapter.js",["97","98","99"],"import React, { useState, useEffect } from 'react'\r\nimport { apiManga, apiUpdateHistory, apiPage } from \"../endpoint\";\r\nimport axios from 'axios'\r\nimport { useParams } from \"react-router-dom\"\r\nimport Cookies from 'universal-cookie';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    ListItem,\r\n    List,\r\n    ListItemText,\r\n    Divider,\r\n    CircularProgress,\r\n    Button,\r\n    Dialog,\r\n    AppBar,\r\n    Toolbar,\r\n    TextField\r\n\r\n } from '@material-ui/core'\r\n\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: 14\r\n        }\r\n    },\r\n    mobileText:{\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    input: {\r\n        '& label.Mui-focused': {\r\n            color: '#FFFFFF'\r\n          },\r\n    },\r\n    notchedOutline: {\r\n        borderColor: \"#FFFFFF !important\"\r\n      }\r\n  }));\r\n\r\nexport default function MangaChapter() {\r\n\r\n\r\n    const classes = useStyles();\r\n    const { lang, manga_tile } = useParams()\r\n    const [loading, setLoading] = useState(true)\r\n    const [chapter, setChapter] = useState([])\r\n    const [info, setInfo] = useState({\r\n        \r\n        cover_img   : null,\r\n        summary     : null\r\n    })\r\n    \r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    // fillter function\r\n    const [fillterChapter, setFillterChapter] = useState(\"\")\r\n\r\n    const handleFilterChapter = (e) => {\r\n        setFillterChapter(e.target.value);\r\n    };\r\n\r\n    function FetchManga() {\r\n        \r\n        axios.get(apiManga, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile\r\n            }\r\n        })\r\n\r\n        .then(res =>{\r\n        \r\n                // console.log(res.data.chapters)\r\n                // console.log(res.data.cover_img)\r\n                // console.log(res.data.summary)\r\n                setChapter(res.data.chapters)\r\n                setInfo({\r\n                    cover_img:res.data.cover_img,\r\n                    summary:res.data.summary,\r\n                    title:res.title    \r\n                })\r\n                \r\n                CreateOrUpdate(res.data.cover_img)\r\n                // console.log(res.data.chapters)\r\n                setLoading(false)\r\n                \r\n        })\r\n\r\n    }\r\n\r\n    function UpdateDbUser(userHistory) {\r\n\r\n        let token = cookies.get(\"Mangamee_Login_Token\");\r\n        \r\n        axios.post(apiUpdateHistory,{\r\n\r\n            token   : token,\r\n            history : userHistory\r\n            \r\n        })\r\n    }\r\n\r\n    function CreateOrUpdate(coverImg) {\r\n\r\n        let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n        let tempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n        // console.log(userToken)\r\n\r\n        if(userToken !== undefined){\r\n\r\n\r\n            if(tempHistory === undefined){\r\n\r\n                CreateCookies(coverImg)\r\n\r\n            }else{\r\n\r\n                UpdateCookies(tempHistory, coverImg)\r\n                   \r\n            }    \r\n        }\r\n    }\r\n\r\n\r\n    function CreateCookies(coverImg){\r\n\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n\r\n        let userHistory = [\r\n            {\r\n                ID : manga_tile,\r\n                Lang : lang,\r\n                Name : tempName,\r\n                CoverImg : coverImg,\r\n                LatestRead : '-'\r\n            }\r\n        ]\r\n        \r\n        let date = new Date(2030, 12)\r\n        cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n        UpdateDbUser(userHistory)\r\n\r\n    }\r\n\r\n    function UpdateCookies(tempHistory, coverImg) {\r\n\r\n        let userHistory = tempHistory\r\n        let tempName = cookies.get(\"Mangamee_Temp_Name\");\r\n        // checking manga is input or not if, ga da, tambahin data,if ada, update\r\n\r\n        let checkName = manga_tile\r\n        let findName = userHistory.find((item) =>{\r\n            return item.ID === checkName\r\n        })\r\n\r\n        // console.log(userHistory)\r\n\r\n        if(findName === undefined){\r\n            \r\n            userHistory.push(\r\n                \r\n                {\r\n                    ID : manga_tile,\r\n                    Lang : lang,\r\n                    Name : tempName,\r\n                    CoverImg : coverImg,\r\n                    LatestRead : '-'\r\n\r\n                }\r\n            )\r\n\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", userHistory, { path: \"/\", expires: date })\r\n            UpdateDbUser(userHistory)\r\n        }\r\n    }\r\n\r\n\r\n    // manga func  ---------------------------------------------------------------------------------\r\n\r\n\r\n    const [open, setOpen] = useState({\r\n\r\n        mangaIndex : null,\r\n        mangaData : [],\r\n        isModalOpen : false\r\n    });\r\n\r\n    const [tempMangaID, settempMangaID] = useState(0)\r\n    const [loadingManga, setloadingManga] = useState(true)\r\n    \r\n    const fecthManga = (id) => {\r\n\r\n        axios.get(apiPage, {\r\n            params:{\r\n\r\n                lang:lang,\r\n                manga_title:manga_tile,\r\n                chapter:chapter[id].link\r\n            }\r\n        })\r\n        .then(res =>{\r\n\r\n                // console.log(res.data)\r\n                setOpen({\r\n                    mangaIndex : id,\r\n                    mangaData : res.data,\r\n                    isModalOpen : true\r\n                    \r\n                })\r\n        })\r\n    }\r\n\r\n    function getIndex(chapter_name) {\r\n\r\n        return chapter.findIndex(item => item.link === chapter_name);\r\n    }\r\n\r\n    function updateCookiesChapter(tempID){\r\n\r\n        // get data\r\n        let MangaID = manga_tile\r\n        let lastChapter = chapter[tempID].chapter_name\r\n        let TempHistory = cookies.get(\"Mangamee_Temp_History\");\r\n\r\n\r\n        // update chapter .map cookies\r\n        if(TempHistory !== undefined){\r\n\r\n            let newChapter = TempHistory.map(obj =>\r\n                obj.ID === MangaID ? { ...obj, LatestRead: lastChapter } : obj\r\n            );\r\n        \r\n            // jsonvalue\r\n            let date = new Date(2030, 12)\r\n            cookies.set(\"Mangamee_Temp_History\", newChapter, { path: \"/\", expires: date })\r\n            UpdateDbUser(newChapter)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleImageError = (e) => {\r\n        e.target.onerror = null;\r\n        e.target.style.display = 'none'\r\n        e.target.src = \" \"\r\n    }\r\n\r\n    const handleClickOpen = (link) => {\r\n\r\n        let tempID = getIndex(link)\r\n        settempMangaID(tempID)\r\n        fecthManga(tempID)\r\n        updateCookiesChapter(tempID)\r\n        setloadingManga(false)\r\n    };\r\n  \r\n    const handleClose = () => {\r\n\r\n      setOpen({\r\n\r\n            mangaIndex : null,\r\n            isModalOpen : false,\r\n            mangaData : [],\r\n      });\r\n    };\r\n\r\n    const handlePrev = () => {\r\n\r\n        setloadingManga(true)\r\n        let id = tempMangaID\r\n        // check with length chapter\r\n        if(id !== (chapter.length -1)){\r\n\r\n            setOpen({\r\n\r\n                mangaIndex : null,\r\n                isModalOpen : true,\r\n                mangaData : [],\r\n            })\r\n            id = id + 1\r\n            settempMangaID(id)\r\n            // console.log(id)\r\n            fecthManga(id)\r\n            updateCookiesChapter(id)\r\n            \r\n        }\r\n        setloadingManga(false)\r\n    }\r\n\r\n    const handleNext = () => {\r\n\r\n        setloadingManga(true)\r\n\r\n        let id = tempMangaID\r\n        if(id !== 0){\r\n\r\n            setOpen({\r\n\r\n                mangaIndex : null,\r\n                isModalOpen : true,\r\n                mangaData : [],\r\n            })\r\n\r\n            id = id - 1\r\n            settempMangaID(id)\r\n            // console.log(id)\r\n            fecthManga(id)\r\n            updateCookiesChapter(id)\r\n\r\n        }\r\n        setloadingManga(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        FetchManga()\r\n       \r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MuiThemeProvider theme={theme}>\r\n            <Container>\r\n\r\n            {loading ? (\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 150 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                </Grid>\r\n\r\n            ):(\r\n\r\n                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 100 }}>\r\n                    <Grid item lg={8} xs={12}>\r\n                    <Card style={{ height: '100%' }}>\r\n                        <CardActionArea>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt=\" \"\r\n                            // height='60%'\r\n                            src={info.cover_img}\r\n                            title=\"manga title\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"h6\">\r\n                                 summary\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {info.summary}\r\n                            </Typography>\r\n                            <br />\r\n                            <Divider />\r\n                            <br />\r\n                            <form>\r\n                            <TextField id=\"outlined-basic\" \r\n                                       label=\"Search Chapter\" \r\n                                       variant=\"outlined\" \r\n                                       fullWidth\r\n                                       onChange={handleFilterChapter}\r\n                                       className={classes.input}\r\n                                       InputProps={{\r\n                                        classes: {\r\n                                          notchedOutline: classes.notchedOutline\r\n                                        }\r\n                                      }}/>\r\n\r\n                            </form>\r\n                            <br />\r\n                            <List>\r\n                                {chapter.filter((item) =>{\r\n                                    if (fillterChapter == \"\") {\r\n                                        return item\r\n                                    } else if (\r\n                                        item.chapter_name.toLowerCase().includes(fillterChapter.toLocaleLowerCase())\r\n                                    ) {\r\n                                        return item\r\n                                    }\r\n                                }).map((item, index) => (\r\n                                        <ListItem button>\r\n                                            <ListItemText style={{ color: '#FFFFFF' }} \r\n                                                        primary={item.chapter_name} \r\n                                                        onClick={e => handleClickOpen(item.link)}/>\r\n                                        </ListItem>\r\n                                ))}\r\n\r\n                                {/* {chapter.map((item, index) => (\r\n                                        <ListItem button>\r\n                                            <ListItemText style={{ color: '#FFFFFF' }} \r\n                                                        primary={item.chapter_name} \r\n                                                        onClick={e => handleClickOpen(index)}/>\r\n                                        </ListItem>\r\n                                ))} */}\r\n\r\n                            </List>   \r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    \r\n                    <Dialog fullScreen open={open.isModalOpen} onClose={handleClose}>\r\n  \r\n                        <AppBar style={{ background: '#2E3B55' }}>\r\n                        <Toolbar variant=\"dense\">\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography noWrap variant=\"h6\" className={classes.title}>\r\n                                {chapter[tempMangaID].chapter_name}\r\n                            </Typography>\r\n                            <Button autoFocus color=\"inherit\" onClick={e => handlePrev()} className={classes.mobileText}>\r\n                            Prev\r\n                            </Button>\r\n                            <Button autoFocus color=\"inherit\" onClick={e => handleNext()} className={classes.mobileText}>\r\n                            Next\r\n                            </Button>\r\n                        </Toolbar>\r\n                        </AppBar>\r\n\r\n                            {loadingManga ? (\r\n                                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 200 }}>\r\n                                    <CircularProgress color=\"secondary\"/>\r\n                                </Grid>\r\n                            ) : (\r\n\r\n                                <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                                <Grid item lg={7} xs={12}>\r\n                                    {open.mangaData.map(item =>{\r\n                                        return(\r\n                                        <LazyLoad>\r\n                                        <CardMedia component='img' src={item.image} onError={handleImageError}/>\r\n                                        </LazyLoad>\r\n                                    )})}\r\n                                    \r\n                                </Grid>\r\n                                </Grid>    \r\n\r\n                            )  }\r\n\r\n                    </Dialog>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            </Container>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignIn.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react\\src\\component\\SignUp.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\index.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\App.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\reportWebVitals.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Navbar.js",["100"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { \r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  MenuItem,\r\n  Menu\r\n } from \"@material-ui/core\";\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst cookies = new Cookies()\r\n\r\nexport default function PrimarySearchAppBar() {\r\n\r\n  const trigger = useScrollTrigger();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const theme = createMuiTheme({\r\n    palette:{\r\n\r\n        type:'dark'\r\n    }\r\n\r\n  })\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const [isLoggedIn, setisLoggedIn] = useState(false)\r\n  \r\n\r\n  function tokenCheck(){\r\n\r\n    let userToken = cookies.get(\"Mangamee_Login_Token\");\r\n    // console.log(cookies.get(\"Mangamee_Login_Token\"))\r\n\r\n    if(userToken !== undefined){\r\n\r\n      setisLoggedIn(true)\r\n\r\n    }else{\r\n\r\n      setisLoggedIn(false)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function deleteToken(){\r\n\r\n    cookies.remove(\"Mangamee_Login_Token\" ,{ path: '/' })\r\n    cookies.remove(\"Mangamee_Temp_History\" ,{ path: '/' })\r\n    cookies.remove(\"Mangamee_Temp_Name\" ,{ path: '/' })\r\n    window.location.href='/'\r\n\r\n  }\r\n\r\n\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n\r\n  const renderMenuLogin = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n\r\n\r\n      {isLoggedIn ? (\r\n\r\n          <MenuItem onClick={deleteToken}>\r\n          logout \r\n          </MenuItem>\r\n      ): ( \r\n\r\n        <MenuItem onClick={() => { window.location.href='/auth/signin'}}>\r\n        login  \r\n        </MenuItem>\r\n\r\n      )}\r\n\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n        <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <HomeIcon />\r\n        </IconButton>\r\n        <p>Home</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/browse'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <MenuBookIcon />\r\n        </IconButton>\r\n        <p>Browse Manga</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/search'\r\n\t\t\t\t\t\t          }}>\r\n        <IconButton color=\"inherit\">\r\n            <SearchIcon />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    tokenCheck();\r\n\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <MuiThemeProvider theme={theme}>\r\n    <div className={classes.grow}>\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar style={{ background: '#2E3B55' }}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Mangamee\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton color=\"inherit\">\r\n                <HomeIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/'\r\n\t\t\t\t\t\t      }}/>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                <MenuBookIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/browse'\r\n\t\t\t\t\t\t      }}/>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n                <SearchIcon \r\n                    onClick={() => {\r\n\t\t\t\t\t\t\t        window.location.href='/search'\r\n\t\t\t\t\t\t          }}/>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </Slide>\r\n      {renderMobileMenu}\r\n      {renderMenuLogin}\r\n    </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n",["101","102"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Browse.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\MangaChapter.js",["103","104"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Home.js",["105"],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\SignIn.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\SignUp.js",[],"C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\component\\Search.js",["106"],"import React, { useState } from 'react'\r\nimport { apiSearch } from \"../endpoint\";\r\nimport axios from 'axios';\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Link,\r\n    TextField,\r\n    CircularProgress,\r\n    CssBaseline,\r\n\r\n } from '@material-ui/core'\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport {MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst cookies = new Cookies()\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    mobileText:{\r\n\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: 12\r\n        }\r\n    },\r\n    buttonColor: {\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: \"red\"\r\n        }\r\n    },\r\n    input: {\r\n        '& label.Mui-focused': {\r\n            color: '#FFFFFF'\r\n          },\r\n    },\r\n  }));\r\n  \r\nexport default function Search() {\r\n\r\n    const classes = useStyles();\r\n    const [searchResult, setSearchResult] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [notFound, setnotFound] = useState(false)\r\n    const [langOption, setLangOption] = useState('EN');\r\n    const { handleSubmit, control } = useForm();\r\n\r\n    const theme = createMuiTheme({\r\n        palette:{\r\n\r\n            type:'dark'\r\n        }\r\n\r\n    })\r\n\r\n    function fetchData(title, langOption) {\r\n        \r\n        axios.get(apiSearch, {\r\n            params:{\r\n\r\n                lang:langOption,\r\n                manga_title:title\r\n            }\r\n        })\r\n        .then((res) =>{\r\n            // console.log(res.data.length);\r\n            if(res.data.length !== 0){\r\n                setSearchResult(res.data);\r\n                setLoading(false)\r\n            }else{\r\n                setnotFound(true)\r\n                setLoading(false)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const handleLangSelect = (event, newLang) => {\r\n        setLangOption(newLang);\r\n    };\r\n\r\n    const onSubmitLogin = data => {\r\n\r\n        // console.log(data)\r\n        // console.log(langOption)\r\n        setSearchResult([])\r\n        setLoading(true)\r\n        setnotFound(false)\r\n        fetchData(data.title_manga, langOption);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <MuiThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop : 120 }}>\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmitLogin)}>\r\n                    <Controller\r\n                        name='title_manga'\r\n                        as={\r\n\r\n                            <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title_manga\"\r\n                            label=\"Manga Title\"\r\n                            name=\"title_manga\"\r\n                            className={classes.input}\r\n                        />\r\n                    }\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        rules={{\r\n                            required: 'Required'\r\n                        }}\r\n\r\n                    />\r\n\r\n                <ToggleButtonGroup\r\n                        value={langOption}\r\n                        exclusive\r\n                        onChange={handleLangSelect}\r\n                        aria-label=\"lang selected\"\r\n                    >\r\n                    <ToggleButton value=\"EN\" aria-label=\"left aligned\" className={classes.buttonColor}>\r\n                        ENG\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"ID\" aria-label=\"centered\" className={classes.buttonColor}>\r\n                        IND\r\n                    </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n\r\n                </form>\r\n                </div>\r\n                </Container>\r\n\r\n            \r\n                {loading ? (\r\n\r\n                    <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                    <CircularProgress color=\"secondary\"/>\r\n                    </Grid>\r\n\r\n                ) : (\r\n\r\n                    <div>\r\n                    {notFound ? (\r\n                        \r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                            Not Found\r\n                        </Typography>\r\n                        </Grid>\r\n\r\n                    ) : (\r\n\r\n                        <Grid container spacing={3} m={2} justify='center' style={{ marginTop : 50 }}>\r\n                            {searchResult.map(item =>{\r\n                            return(\r\n                                <Grid item lg={2} xs={4}>\r\n                                        <Card className={classes.root} style={{ height: '100%' }}>\r\n                                            <div onClick={() => {\r\n                                            \r\n                                                let MangeName = item.name\r\n                                                let date = new Date(2030, 12)\r\n                                                cookies.set(\"Mangamee_Temp_Name\", MangeName, { path: \"/\", expires: date })\r\n                                        \r\n                                            }}>\r\n                                            <CardActionArea>\r\n                                            <Link underline='none' \r\n                                                  component={RouterLink} \r\n                                                  to={`/${langOption}/${item.link}`}>\r\n\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt=\" \"\r\n                                                height=\"180\"\r\n                                                src={item.thumbnail_image}\r\n                                                title=\"manga title\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography noWrap \r\n                                                            variant=\"body2\" \r\n                                                            color=\"textPrimary\" \r\n                                                            component=\"p\" \r\n                                                            className={classes.mobileText}>\r\n\r\n                                                    {item.name}\r\n                                                </Typography>\r\n                                                <br/>\r\n                                                <Typography variant=\"body2\" \r\n                                                            color=\"textSecondary\" \r\n                                                            component=\"p\" \r\n                                                            className={classes.mobileText}>\r\n                                                                \r\n                                                    {item.latest_chapter} chapter - {item.status}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            </Link>\r\n                                            </CardActionArea>\r\n                                            </div>\r\n                                        </Card>\r\n                                </Grid> \r\n                            )})}\r\n                        </Grid>\r\n\r\n                    )}\r\n\r\n                    </div>\r\n                )}\r\n\r\n            </MuiThemeProvider>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Dhiya Rifqi\\Downloads\\Programs\\React\\A\\mangamee-react-django\\src\\config\\endpoint.js",["107"],"const MangameeBe = 'https://be-mangamee.herokuapp.com';\r\nconst MangameeBeLocal = 'http://127.0.0.1:8000';\r\n\r\n\r\nconst apiURL = '/api';\r\n\r\nexport const endpoint = `${MangameeBe}${apiURL}`;\r\n\r\n// export const endpoint = `${MangameeBeLocal}${apiURL}`;\r\n\r\nexport const apiBrowse = `${endpoint}/browse/`;\r\nexport const apiSearch = `${endpoint}/search/`;\r\nexport const apiManga = `${endpoint}/manga/`;\r\nexport const apiPage = `${endpoint}/page/`;\r\n\r\n// auth user\r\nexport const apiLogin = `${endpoint}/auth/login/`;\r\nexport const apiRegister = `${endpoint}/auth/register/`;\r\n\r\n\r\nexport const apiGetHistory = `${endpoint}/gethistory/`;\r\nexport const apiUpdateHistory = `${endpoint}/updatehistory/`;\r\nexport const apiDeleteHistory = `${endpoint}/deletehistory/`;\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":64,"column":8,"nodeType":"114","endLine":64,"endColumn":10,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":352,"column":8,"nodeType":"114","endLine":352,"endColumn":10,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":405,"column":56,"nodeType":"120","messageId":"121","endLine":405,"endColumn":58},{"ruleId":"122","severity":1,"message":"123","line":406,"column":56,"nodeType":"124","messageId":"125","endLine":406,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":207,"column":6,"nodeType":"114","endLine":207,"endColumn":8,"suggestions":"126"},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"112","severity":1,"message":"116","line":352,"column":8,"nodeType":"114","endLine":352,"endColumn":10,"suggestions":"129"},{"ruleId":"118","severity":1,"message":"119","line":405,"column":56,"nodeType":"120","messageId":"121","endLine":405,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":87,"column":8,"nodeType":"114","endLine":87,"endColumn":10,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"131","line":125,"column":8,"nodeType":"114","endLine":125,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":7,"nodeType":"135","messageId":"136","endLine":2,"endColumn":22},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'FetchManga'. Either include it or remove the dependency array.",["140"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["141"],["137"],["138"],["142"],["143"],"React Hook useEffect has missing dependencies: 'lang' and 'title'. Either include them or remove the dependency array.",["144"],"no-unused-vars","'MangameeBeLocal' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"145","fix":"149"},{"desc":"147","fix":"150"},{"desc":"145","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [tokenCheck]",{"range":"154","text":"155"},"Update the dependencies array to be: [FetchManga]",{"range":"156","text":"157"},{"range":"158","text":"155"},{"range":"159","text":"157"},{"range":"160","text":"155"},"Update the dependencies array to be: [lang, title]",{"range":"161","text":"162"},[1348,1350],"[tokenCheck]",[8361,8363],"[FetchManga]",[5017,5019],[8368,8370],[1972,1974],[2957,2959],"[lang, title]"]